{"ast":null,"code":"import { useState } from 'react';\nimport axios from 'axios';\nimport useDebouncedPromise from 'components/utils/useDebouncedPromise';\nconst initialRequestInfo = {\n  error: null,\n  data: null,\n  loading: false\n};\nexport default function useApi(config) {\n  const [requestInfo, setRequestInfo] = useState(initialRequestInfo);\n  const debouncedAxios = useDebouncedPromise(axios, config.debounceDelay);\n\n  async function call(localConfig) {\n    let response = null;\n    const finalConfig = {\n      baseURL: 'http://localhost:5000',\n      ...config,\n      ...localConfig\n    };\n\n    if (!finalConfig.quietly) {\n      setRequestInfo({ ...initialRequestInfo,\n        loading: true\n      });\n    }\n\n    const fn = finalConfig.debounced ? debouncedAxios : axios;\n\n    try {\n      response = await fn(finalConfig);\n      setRequestInfo({ ...initialRequestInfo,\n        data: response.data\n      });\n    } catch (error) {\n      setRequestInfo({ ...initialRequestInfo,\n        error\n      });\n    }\n\n    if (config.onCompleted) {\n      config.onCompleted(response);\n    }\n\n    return response;\n  }\n\n  return [call, requestInfo];\n}","map":{"version":3,"sources":["C:/Users/pedro/Desktop/Chat real time/react-iniciante/web/src/components/utils/useApi.js"],"names":["useState","axios","useDebouncedPromise","initialRequestInfo","error","data","loading","useApi","config","requestInfo","setRequestInfo","debouncedAxios","debounceDelay","call","localConfig","response","finalConfig","baseURL","quietly","fn","debounced","onCompleted"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,mBAAP,MAAgC,sCAAhC;AAEA,MAAMC,kBAAkB,GAAG;AACzBC,EAAAA,KAAK,EAAE,IADkB;AAEzBC,EAAAA,IAAI,EAAE,IAFmB;AAGzBC,EAAAA,OAAO,EAAE;AAHgB,CAA3B;AAMA,eAAe,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACrC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAACG,kBAAD,CAA9C;AACA,QAAMQ,cAAc,GAAGT,mBAAmB,CAACD,KAAD,EAAQO,MAAM,CAACI,aAAf,CAA1C;;AAEA,iBAAeC,IAAf,CAAoBC,WAApB,EAAiC;AAC/B,QAAIC,QAAQ,GAAG,IAAf;AAEA,UAAMC,WAAW,GAAG;AAClBC,MAAAA,OAAO,EAAE,uBADS;AAElB,SAAGT,MAFe;AAGlB,SAAGM;AAHe,KAApB;;AAMA,QAAI,CAACE,WAAW,CAACE,OAAjB,EAA0B;AACxBR,MAAAA,cAAc,CAAC,EACb,GAAGP,kBADU;AAEbG,QAAAA,OAAO,EAAE;AAFI,OAAD,CAAd;AAID;;AAED,UAAMa,EAAE,GAAGH,WAAW,CAACI,SAAZ,GAAwBT,cAAxB,GAAyCV,KAApD;;AAEA,QAAI;AACFc,MAAAA,QAAQ,GAAG,MAAMI,EAAE,CAACH,WAAD,CAAnB;AACAN,MAAAA,cAAc,CAAC,EACb,GAAGP,kBADU;AAEbE,QAAAA,IAAI,EAAEU,QAAQ,CAACV;AAFF,OAAD,CAAd;AAID,KAND,CAME,OAAOD,KAAP,EAAc;AACdM,MAAAA,cAAc,CAAC,EACb,GAAGP,kBADU;AAEbC,QAAAA;AAFa,OAAD,CAAd;AAID;;AAED,QAAII,MAAM,CAACa,WAAX,EAAwB;AACtBb,MAAAA,MAAM,CAACa,WAAP,CAAmBN,QAAnB;AACD;;AACD,WAAOA,QAAP;AACD;;AAED,SAAO,CAACF,IAAD,EAAOJ,WAAP,CAAP;AACD","sourcesContent":["import { useState } from 'react';\r\nimport axios from 'axios';\r\nimport useDebouncedPromise from 'components/utils/useDebouncedPromise';\r\n\r\nconst initialRequestInfo = {\r\n  error: null,\r\n  data: null,\r\n  loading: false,\r\n};\r\n\r\nexport default function useApi(config) {\r\n  const [requestInfo, setRequestInfo] = useState(initialRequestInfo);\r\n  const debouncedAxios = useDebouncedPromise(axios, config.debounceDelay);\r\n\r\n  async function call(localConfig) {\r\n    let response = null;\r\n\r\n    const finalConfig = {\r\n      baseURL: 'http://localhost:5000',\r\n      ...config,\r\n      ...localConfig,\r\n    };\r\n\r\n    if (!finalConfig.quietly) {\r\n      setRequestInfo({\r\n        ...initialRequestInfo,\r\n        loading: true,\r\n      });\r\n    }\r\n\r\n    const fn = finalConfig.debounced ? debouncedAxios : axios;\r\n\r\n    try {\r\n      response = await fn(finalConfig);\r\n      setRequestInfo({\r\n        ...initialRequestInfo,\r\n        data: response.data,\r\n      });\r\n    } catch (error) {\r\n      setRequestInfo({\r\n        ...initialRequestInfo,\r\n        error,\r\n      });\r\n    }\r\n\r\n    if (config.onCompleted) {\r\n      config.onCompleted(response);\r\n    }\r\n    return response;\r\n  }\r\n\r\n  return [call, requestInfo];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}